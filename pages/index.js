import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Animate from '../components/ui/animate'
import { supabase } from '../helper/db'
import { useEffect,useState } from 'react'
import {updateUser ,findUser ,fetchProducts , fetchProductsByCategory ,  searchProducts  } from '../helper/functions'
import UserLayout from '../components/user/userlayout'
import { useglobal } from '../context'
import {useRouter} from 'next/router'
import PublicProducts from '../components/global/publicProducts'

export default function Home() {


const {name ,   setUserinfo,userinfo,search , setSearch  } = useglobal();
const [products, setProducts] = useState([])
const router = useRouter()
const { category } = router.query;
  const authuser =  supabase.auth.user();

const [searchmode , setSearchmode] = useState(false)
const [searchproducts , setSearchproducts] = useState([])
 // console.log('authuser', authuser)

useEffect(() => {

 authuser && updateUser(authuser)
  authuser && findUser(authuser).then(user => {
    setUserinfo(user)
   // console.log('userinfo is ----->', user)
    

  })


   if ( search !== ''  || search !== undefined ) {
    searchProducts(search).then(res => {

    
      console.log('search products is ⏺⏺⏺❇❇❇ ----->', res)
      setSearchproducts(res)
      setSearchmode(true)
    })
 

   }


  

 if (category ) {
  setSearchmode('')
  router.push('/?category='+category)

    console.log('fetch products by category ----->', category)
    fetchProductsByCategory(category).then(res => {
      setProducts(res)
      setSearchmode(false)
    })
  }

else if ( category === undefined   ) {
  fetchProducts().then(res => {
 
 
    
    setProducts(res)
    setSearchmode(false)
   // console.log('products is ⏺⏺⏺ ----->', products)
   
  })




}

}, [authuser , category , search])







  return (

    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

  <UserLayout>
<div>

{/* {search} */}
{/* {products?.length} */}

{/* { searchmode ?  (<div className=' mb-12'>

<PublicProducts products={searchProducts} /> */}



{/* </div>
)   :  */}


{searchmode ? 'search Mode' : ' normal mode'}

 <div className=' mb-12'>

<PublicProducts products={searchmode ? searchproducts : products } />



</div>






</div>

  </UserLayout>



    </div>
  )
}
